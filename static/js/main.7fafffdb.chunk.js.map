{"version":3,"sources":["serviceWorkerRegistration.js","reportWebVitals.js","hooks/useLocalStorage.js","components/Editor.jsx","components/Output.jsx","static/md-elements.js","components/ShortcutBar.jsx","components/MainButtons.jsx","App.jsx","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","useLocalStorage","key","initialValue","useState","item","localStorage","getItem","JSON","parse","storedValue","setStoredValue","value","setItem","stringify","Editor","textMarkdown","updateText","TextArea","onChange","e","target","placeholder","styled","textarea","Output","refOutput","markedText","OutputContainer","ref","dangerouslySetInnerHTML","__html","section","MarkDownElements","content","markDown","ShortcutBar","refShortcutBar","addElement","Bar","map","i","BarElement","onClick","button","MainButtons","refUploadFileInput","toggleItem","downloadMarkdown","deleteTextMarkdown","openFilebrowser","fileUpload","Container","innerWidth","className","type","accept","div","App","setTextMarkdown","setMarkedText","useRef","useEffect","marked","GlobalStyle","MainContainer","element","newElement","length","newText","current","classList","toggle","archivo","Blob","url","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","confirm","File","FileReader","FileList","files","reader","onload","file","result","readAsText","alert","createGlobalStyle","main","ReactDOM","render","StrictMode","getElementById","process","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.7fafffdb.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useState } from \"react\";\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      setStoredValue(value);\n      window.localStorage.setItem(key, JSON.stringify(value));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import styled from \"styled-components\";\n\nconst Editor = ({ textMarkdown, updateText }) => {\n  return (\n    <section>\n      <TextArea\n        onChange={e => updateText(e.target.value)}\n        value={textMarkdown}\n        placeholder=\"Write note...\"\n      />\n    </section>\n  );\n};\n\nexport default Editor;\n\nconst TextArea = styled.textarea`\n  width: 100%;\n  height: 100%;\n  padding: 2rem 2rem 7rem 2rem;\n  color: #ffffff;\n  background-color: #222222;\n  resize: none;\n`;\n","import styled from \"styled-components\";\n\nconst Output = ({ refOutput, markedText }) => {\n  return <OutputContainer ref={refOutput} dangerouslySetInnerHTML={{ __html: markedText }} />;\n};\n\nexport default Output;\n\nconst OutputContainer = styled.section`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  width: 100%;\n  height: 100vh;\n  padding: 2rem 2rem 7rem 2rem;\n\n  font-size: 1.6rem;\n\n  background-color: #ffffff;\n\n  transition: transform 0.3s ease;\n  transform: translateX(100%);\n  overflow: auto;\n\n  @media (min-width: 1000px) {\n    position: static;\n    transform: translateX(0);\n  }\n\n  h1,\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin-bottom: 1rem;\n  }\n\n  h1 {\n    font-size: 3rem;\n  }\n\n  h2 {\n    font-size: 2.5rem;\n  }\n\n  h3 {\n    font-size: 2.2rem;\n  }\n\n  h4 {\n    font-size: 1.9rem;\n  }\n\n  h5 {\n    font-size: 1.6rem;\n  }\n\n  h6 {\n    font-size: 1.3rem;\n  }\n\n  p {\n    font-size: 1.6rem;\n    margin-bottom: 1rem;\n  }\n\n  pre {\n    max-width: 30rem;\n    background-color: #eee;\n    padding: 1rem;\n    margin-bottom: 1rem;\n    font-size: 1.5rem;\n    border-radius: 0.5rem;\n    overflow: auto;\n\n    @media (min-width: 500px) {\n      max-width: 25rem;\n    }\n\n    @media (min-width: 600px) {\n      max-width: 30rem;\n    }\n\n    @media (min-width: 700px) {\n      max-width: 30.5rem;\n    }\n\n    @media (min-width: 800px) {\n      max-width: 40rem;\n    }\n\n    @media (min-width: 900px) {\n      max-width: 40.5rem;\n    }\n\n    @media (min-width: 1000px) {\n      max-width: 50rem;\n    }\n\n    code {\n      min-width: 30rem;\n    }\n  }\n\n  img {\n    width: 100%;\n    min-width: 0;\n    border-radius: 0.5rem;\n  }\n\n  ul {\n    padding-left: 2rem;\n    margin-bottom: 1rem;\n  }\n\n  table {\n    margin: 1rem 0;\n    background: #ffffff;\n    border-radius: 0.5rem;\n\n    code {\n      padding: 0 0.4rem;\n      background-color: #f6f8fa;\n      border-radius: 0.5rem;\n    }\n\n    tr,\n    td {\n      background: #eee;\n    }\n\n    td img {\n      width: 2rem;\n      box-shadow: 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 3px 1px -2px rgba(0, 0, 0, 0.12),\n        0px 1px 5px 0px rgba(0, 0, 0, 0.2);\n    }\n\n    th,\n    td {\n      display: table-cell;\n      text-align: left;\n      padding: 0.5rem 1rem;\n    }\n  }\n\n  blockquote {\n    padding-left: 1.2rem;\n    border-left: 0.5rem solid #4dbc88;\n  }\n`;\n","const MarkDownElements = [\n  { content: \"Title H1\", markDown: \"# Title H1\" },\n  { content: \"Title H2\", markDown: \"## Title H2\" },\n  { content: \"Title H3\", markDown: \"### Title H3\" },\n  { content: \"Title H4\", markDown: \"#### Title H4\" },\n  { content: \"Title H5\", markDown: \"##### Title H5\" },\n  { content: \"Title H6\", markDown: \"###### Title H6\" },\n  {\n    content: \"Paragraph\",\n    markDown:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Praesent enim nisi, venenatis non finibus vel, elementum ac tellus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec hendrerit pulvinar lectus, sit amet laoreet orci tincidunt sit amet. Sed mi est, sollicitudin at sapien ut, scelerisque maximus leo. Integer sed ornare ante, vel faucibus mauris. Ut bibendum pharetra mauris, sed cursus ex iaculis vitae. Vestibulum dolor sem, ullamcorper non ex at, pulvinar tempor ipsum. Nulla non facilisis nisl, ac eleifend felis.\",\n  },\n  {\n    content: \"Bold\",\n    markDown: \"**Bold**\",\n  },\n  {\n    content: \"Italic\",\n    markDown: \"*Italic*\",\n  },\n  {\n    content: \"Bold & Italic\",\n    markDown: \"***Bold & Italic***\",\n  },\n  {\n    content: \"List\",\n    markDown: \"- Awesome Readme Templates\\n- Awesome README\\n- How to write a Good readme\",\n  },\n  {\n    content: \"Link\",\n    markDown: \"[Documentation](https://linktodocumentation)\",\n  },\n  {\n    content: \"Code\",\n    markDown: \"```bash\\n$ sudo apt update\\n```\",\n  },\n  {\n    content: \"Blockquote\",\n    markDown:\n      \"> Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam in sagittis eros. Quisque id condimentum quam. Ut mollis neque leo, et luctus ante sollicitudin quis. Vestibulum quis dolor eget nisl tristique efficitur. Integer vitae dapibus tellus. In neque leo, fermentum vitae dapibus at, vehicula quis tortor. Pellentesque vehicula dapibus purus et egestas.\",\n  },\n  {\n    content: \"Image\",\n    markDown:\n      \"![alternative text](https://media.sproutsocial.com/uploads/2017/02/10x-featured-social-media-image-size.png)\",\n  },\n  {\n    content: \"Table 1\",\n    markDown:\n      \"| Color         | Hex                                                              |\\n| ------------- | ---------------------------------------------------------------- |\\n| Example Color | ![#0a192f](https://via.placeholder.com/10/0a192f?text=+) #0a192f |\\n| Example Color | ![#f8f8f8](https://via.placeholder.com/10/f8f8f8?text=+) #f8f8f8 |\\n| Example Color | ![#00b48a](https://via.placeholder.com/10/00b48a?text=+) #00b48a |\\n| Example Color | ![#00d1a0](https://via.placeholder.com/10/00b48a?text=+) #00d1a0 |\",\n  },\n  {\n    content: \"Table 2\",\n    markDown:\n      \"| Parameter | Type     | Description                       |\\n| :-------- | :------- | :-------------------------------- |\\n| `id`      | `string` | **Required**. Id of item to fetch |\",\n  },\n];\n\nexport default MarkDownElements;\n","import styled from \"styled-components\";\nimport MarkDownElements from \"../static/md-elements\";\n\nimport { IoMdAdd } from \"react-icons/io\";\n\nconst ShortcutBar = ({ refShortcutBar, addElement }) => {\n  return (\n    <Bar ref={refShortcutBar}>\n      {MarkDownElements.map((e, i) => (\n        <BarElement onClick={() => addElement(e.markDown)} key={i}>\n          <span>{e.content}</span>\n          <IoMdAdd />\n        </BarElement>\n      ))}\n    </Bar>\n  );\n};\n\nexport default ShortcutBar;\n\nconst Bar = styled.section`\n  position: fixed;\n  top: 0;\n  left: 0;\n\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-auto-rows: 4rem;\n  gap: 2rem;\n\n  width: 20rem;\n  height: 100vh;\n  padding: 2rem 1rem;\n\n  background-color: #10b981;\n  overflow: auto;\n\n  transition: transform 0.3s ease;\n  transform: translateX(-100%);\n\n  @media (min-width: 600px) {\n    position: static;\n    transform: translateX(0);\n  }\n`;\n\nconst BarElement = styled.button`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  padding: 0 1rem;\n\n  font-size: 1.6rem;\n  font-weight: 500;\n\n  border-radius: 1rem;\n  box-shadow: none;\n`;\n","import styled from \"styled-components\";\n\nimport { IoMdMenu, IoMdTrash, IoIosEye } from \"react-icons/io\";\nimport { MdFileUpload, MdDownload } from \"react-icons/md\";\n\nconst MainButtons = ({\n  refShortcutBar,\n  refOutput,\n  refUploadFileInput,\n  toggleItem,\n  downloadMarkdown,\n  deleteTextMarkdown,\n  openFilebrowser,\n  fileUpload,\n}) => {\n  return (\n    <Container>\n      {/* View button */}\n      {window.innerWidth <= 1000 && (\n        <button className=\"view-btn\" onClick={() => toggleItem(refOutput)}>\n          <IoIosEye />\n        </button>\n      )}\n\n      {/* Delete button */}\n      <button onClick={deleteTextMarkdown}>\n        <IoMdTrash />\n      </button>\n\n      {/* upload file button */}\n      <button onClick={openFilebrowser}>\n        <MdFileUpload />\n\n        <input\n          className=\"input-file\"\n          onChange={fileUpload}\n          ref={refUploadFileInput}\n          type=\"file\"\n          accept=\".md,.mdown,.txt,.markdown\"\n        />\n      </button>\n\n      {/* Download button */}\n      <button onClick={downloadMarkdown}>\n        <MdDownload />\n      </button>\n\n      {/* Menu button */}\n      {window.innerWidth <= 600 && (\n        <button onClick={() => toggleItem(refShortcutBar)}>\n          <IoMdMenu />\n        </button>\n      )}\n    </Container>\n  );\n};\n\nexport default MainButtons;\n\nconst Container = styled.div`\n  position: fixed;\n  right: 1rem;\n  bottom: 1rem;\n\n  display: grid;\n  grid-template-columns: 4rem;\n  grid-auto-rows: 4rem;\n  gap: 1rem;\n\n  button {\n    display: grid;\n    place-content: center;\n\n    font-size: 2rem;\n\n    color: white;\n    background-color: #10b981;\n\n    border-radius: 1.5rem;\n  }\n\n  .input-file {\n    display: none;\n  }\n`;\n","import { marked } from \"marked\";\nimport { useEffect, useRef, useState } from \"react\";\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\n// Components\nimport Editor from \"./components/Editor\";\nimport Output from \"./components/Output\";\nimport ShortcutBar from \"./components/ShortcutBar\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport MainButtons from \"./components/MainButtons\";\n\nconst App = () => {\n  const [textMarkdown, setTextMarkdown] = useLocalStorage(\"textMarkdown\", \"\");\n  const [markedText, setMarkedText] = useState(\"\");\n\n  const refShortcutBar = useRef(null);\n  const refOutput = useRef(null);\n  const refUploadFileInput = useRef(null);\n\n  const updateText = newText => {\n    setTextMarkdown(newText);\n  };\n\n  const addElement = element => {\n    const newElement = textMarkdown.length > 0 ? `\\n\\n${element}` : `${element}`;\n    setTextMarkdown(textMarkdown + newElement);\n  };\n\n  const toggleItem = element => {\n    element.current.classList.toggle(\"toggleElement\");\n  };\n\n  const deleteTextMarkdown = () => {\n    const confirmation = window.confirm(\n      \"This action will eliminate everything. be sure to want to do it?\"\n    );\n\n    if (confirmation) setTextMarkdown(\"\");\n  };\n\n  const downloadMarkdown = () => {\n    const archivo = new Blob([textMarkdown], {\n      type: \"text/plain\",\n    });\n    const url = URL.createObjectURL(archivo);\n    const a = document.createElement(\"a\");\n\n    a.href = url;\n    a.download = \"README.md\";\n    a.click();\n    URL.revokeObjectURL(url);\n  };\n\n  const openFilebrowser = () => {\n    refUploadFileInput.current.click();\n  };\n\n  const fileUpload = e => {\n    if (window.File && window.FileReader && window.FileList && window.Blob) {\n      let files = e.target.files;\n      let reader = new FileReader();\n\n      reader.onload = function (file) {\n        setTextMarkdown(file.target.result);\n        return true;\n      };\n\n      reader.readAsText(files[0]);\n    } else {\n      alert(\"The File APIs are not fully supported in this browser.\");\n    }\n  };\n\n  useEffect(() => setMarkedText(marked(textMarkdown)), [textMarkdown]);\n\n  return (\n    <>\n      <GlobalStyle />\n\n      <MainContainer>\n        <ShortcutBar refShortcutBar={refShortcutBar} addElement={addElement} />\n        <Editor textMarkdown={textMarkdown} updateText={updateText} />\n        <Output refOutput={refOutput} markedText={markedText} />\n      </MainContainer>\n\n      <MainButtons\n        refShortcutBar={refShortcutBar}\n        refOutput={refOutput}\n        refUploadFileInput={refUploadFileInput}\n        toggleItem={toggleItem}\n        downloadMarkdown={downloadMarkdown}\n        deleteTextMarkdown={deleteTextMarkdown}\n        openFilebrowser={openFilebrowser}\n        fileUpload={fileUpload}\n      />\n    </>\n  );\n};\n\nexport default App;\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  border: none;\n  outline: none;\n}\n\nhtml {\n  font-size: 62.5%;\n}\n\nbody {\n  font-family: 'Quicksand', sans-serif;\n  color: #222222;\n  background-color: #ffffff;\n}\n\n#app {\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n}\n\nbutton {\n  background-color: #ffffff;\n  box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12),\n    0px 2px 4px -1px rgba(0, 0, 0, 0.2);\n  transition: transform 0.1s ease;\n\n  &:active {\n    box-shadow: none;\n    transform: scale(0.9);\n  }\n}\n\n.toggleElement {\n  transform: translateX(0);\n}\n`;\n\nconst MainContainer = styled.main`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: 1fr;\n\n  height: 100vh;\n  overflow: auto;\n\n  @media (min-width: 600px) {\n    grid-template-columns: 20rem 1fr;\n  }\n\n  @media (min-width: 1000px) {\n    grid-template-columns: 20rem repeat(2, 1fr);\n  }\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}